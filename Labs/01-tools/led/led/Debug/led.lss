
led.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001b2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000015e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001b2  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001e4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000224  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000008d6  00000000  00000000  00000244  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000681  00000000  00000000  00000b1a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004c8  00000000  00000000  0000119b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001664  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00006d55  00000000  00000000  00001688  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000033b  00000000  00000000  000083dd  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00008718  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  000028ae  00000000  00000000  00008728  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	33 c0       	rjmp	.+102    	; 0x68 <__ctors_end>
   2:	00 00       	nop
   4:	39 c0       	rjmp	.+114    	; 0x78 <__bad_interrupt>
   6:	00 00       	nop
   8:	37 c0       	rjmp	.+110    	; 0x78 <__bad_interrupt>
   a:	00 00       	nop
   c:	35 c0       	rjmp	.+106    	; 0x78 <__bad_interrupt>
   e:	00 00       	nop
  10:	33 c0       	rjmp	.+102    	; 0x78 <__bad_interrupt>
  12:	00 00       	nop
  14:	31 c0       	rjmp	.+98     	; 0x78 <__bad_interrupt>
  16:	00 00       	nop
  18:	2f c0       	rjmp	.+94     	; 0x78 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	2d c0       	rjmp	.+90     	; 0x78 <__bad_interrupt>
  1e:	00 00       	nop
  20:	2b c0       	rjmp	.+86     	; 0x78 <__bad_interrupt>
  22:	00 00       	nop
  24:	29 c0       	rjmp	.+82     	; 0x78 <__bad_interrupt>
  26:	00 00       	nop
  28:	27 c0       	rjmp	.+78     	; 0x78 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	25 c0       	rjmp	.+74     	; 0x78 <__bad_interrupt>
  2e:	00 00       	nop
  30:	23 c0       	rjmp	.+70     	; 0x78 <__bad_interrupt>
  32:	00 00       	nop
  34:	21 c0       	rjmp	.+66     	; 0x78 <__bad_interrupt>
  36:	00 00       	nop
  38:	1f c0       	rjmp	.+62     	; 0x78 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	1d c0       	rjmp	.+58     	; 0x78 <__bad_interrupt>
  3e:	00 00       	nop
  40:	1b c0       	rjmp	.+54     	; 0x78 <__bad_interrupt>
  42:	00 00       	nop
  44:	19 c0       	rjmp	.+50     	; 0x78 <__bad_interrupt>
  46:	00 00       	nop
  48:	17 c0       	rjmp	.+46     	; 0x78 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	15 c0       	rjmp	.+42     	; 0x78 <__bad_interrupt>
  4e:	00 00       	nop
  50:	13 c0       	rjmp	.+38     	; 0x78 <__bad_interrupt>
  52:	00 00       	nop
  54:	11 c0       	rjmp	.+34     	; 0x78 <__bad_interrupt>
  56:	00 00       	nop
  58:	0f c0       	rjmp	.+30     	; 0x78 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	0d c0       	rjmp	.+26     	; 0x78 <__bad_interrupt>
  5e:	00 00       	nop
  60:	0b c0       	rjmp	.+22     	; 0x78 <__bad_interrupt>
  62:	00 00       	nop
  64:	09 c0       	rjmp	.+18     	; 0x78 <__bad_interrupt>
	...

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	02 d0       	rcall	.+4      	; 0x7a <main>
  76:	71 c0       	rjmp	.+226    	; 0x15a <_exit>

00000078 <__bad_interrupt>:
  78:	c3 cf       	rjmp	.-122    	; 0x0 <__vectors>

0000007a <main>:
 **********************************************************************/
int main(void)
{
    // Set pin as output in Data Direction Register
    // DDRB = DDRB or 0010 0000
    DDRB = DDRB | (1<<LED_GREEN);
  7a:	25 9a       	sbi	0x04, 5	; 4
    
    // Set pin LOW in Data Register (LED off)
    // PORTB = PORTB and 1101 1111
    PORTB = PORTB & ~(1<<LED_GREEN);
  7c:	2d 98       	cbi	0x05, 5	; 5


        // S ...
        for (x = 1; x<=3; x++)
        {
            PORTB = PORTB ^ (1<<LED_GREEN);     //LED ON
  7e:	90 e2       	ldi	r25, 0x20	; 32
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  80:	2f ef       	ldi	r18, 0xFF	; 255
  82:	3b e5       	ldi	r19, 0x5B	; 91
  84:	44 e4       	ldi	r20, 0x44	; 68
  86:	21 50       	subi	r18, 0x01	; 1
  88:	30 40       	sbci	r19, 0x00	; 0
  8a:	40 40       	sbci	r20, 0x00	; 0
  8c:	e1 f7       	brne	.-8      	; 0x86 <main+0xc>
  8e:	00 c0       	rjmp	.+0      	; 0x90 <main+0x16>
  90:	00 00       	nop
  92:	23 e0       	ldi	r18, 0x03	; 3
  94:	30 e0       	ldi	r19, 0x00	; 0
  96:	85 b1       	in	r24, 0x05	; 5
  98:	89 27       	eor	r24, r25
  9a:	85 b9       	out	0x05, r24	; 5
  9c:	5f ef       	ldi	r21, 0xFF	; 255
  9e:	83 ec       	ldi	r24, 0xC3	; 195
  a0:	49 e0       	ldi	r20, 0x09	; 9
  a2:	51 50       	subi	r21, 0x01	; 1
  a4:	80 40       	sbci	r24, 0x00	; 0
  a6:	40 40       	sbci	r20, 0x00	; 0
  a8:	e1 f7       	brne	.-8      	; 0xa2 <main+0x28>
  aa:	00 c0       	rjmp	.+0      	; 0xac <main+0x32>
  ac:	00 00       	nop
            _delay_ms(DOT_DELAY);
            PORTB = PORTB & ~(1<<LED_GREEN);    //LED OFF
  ae:	2d 98       	cbi	0x05, 5	; 5
  b0:	5f ef       	ldi	r21, 0xFF	; 255
  b2:	83 ec       	ldi	r24, 0xC3	; 195
  b4:	49 e0       	ldi	r20, 0x09	; 9
  b6:	51 50       	subi	r21, 0x01	; 1
  b8:	80 40       	sbci	r24, 0x00	; 0
  ba:	40 40       	sbci	r20, 0x00	; 0
  bc:	e1 f7       	brne	.-8      	; 0xb6 <main+0x3c>
  be:	00 c0       	rjmp	.+0      	; 0xc0 <main+0x46>
  c0:	00 00       	nop
  c2:	21 50       	subi	r18, 0x01	; 1
  c4:	31 09       	sbc	r19, r1
        // WORD = "SOS" 
        // WORD IN MORSE = "... --- ..." + break between words


        // S ...
        for (x = 1; x<=3; x++)
  c6:	39 f7       	brne	.-50     	; 0x96 <main+0x1c>
  c8:	5f ef       	ldi	r21, 0xFF	; 255
  ca:	8b e4       	ldi	r24, 0x4B	; 75
  cc:	2d e1       	ldi	r18, 0x1D	; 29
  ce:	51 50       	subi	r21, 0x01	; 1
  d0:	80 40       	sbci	r24, 0x00	; 0
  d2:	20 40       	sbci	r18, 0x00	; 0
  d4:	e1 f7       	brne	.-8      	; 0xce <main+0x54>
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <main+0x5e>
  d8:	00 00       	nop
  da:	23 e0       	ldi	r18, 0x03	; 3
  dc:	30 e0       	ldi	r19, 0x00	; 0
        }
        _delay_ms(BREAK_DELAY);
        // O ---
        for (x = 1; x<=3; x++)
        {
            PORTB = PORTB ^ (1<<LED_GREEN);     //LED ON
  de:	85 b1       	in	r24, 0x05	; 5
  e0:	89 27       	eor	r24, r25
  e2:	85 b9       	out	0x05, r24	; 5
  e4:	4f ef       	ldi	r20, 0xFF	; 255
  e6:	5b e4       	ldi	r21, 0x4B	; 75
  e8:	8d e1       	ldi	r24, 0x1D	; 29
  ea:	41 50       	subi	r20, 0x01	; 1
  ec:	50 40       	sbci	r21, 0x00	; 0
  ee:	80 40       	sbci	r24, 0x00	; 0
  f0:	e1 f7       	brne	.-8      	; 0xea <main+0x70>
  f2:	00 c0       	rjmp	.+0      	; 0xf4 <main+0x7a>
  f4:	00 00       	nop
            _delay_ms(BREAK_DELAY);
            PORTB = PORTB & ~(1<<LED_GREEN);    //LED OFF
  f6:	2d 98       	cbi	0x05, 5	; 5
  f8:	4f ef       	ldi	r20, 0xFF	; 255
  fa:	53 ec       	ldi	r21, 0xC3	; 195
  fc:	89 e0       	ldi	r24, 0x09	; 9
  fe:	41 50       	subi	r20, 0x01	; 1
 100:	50 40       	sbci	r21, 0x00	; 0
 102:	80 40       	sbci	r24, 0x00	; 0
 104:	e1 f7       	brne	.-8      	; 0xfe <main+0x84>
 106:	00 c0       	rjmp	.+0      	; 0x108 <main+0x8e>
 108:	00 00       	nop
 10a:	21 50       	subi	r18, 0x01	; 1
 10c:	31 09       	sbc	r19, r1
            PORTB = PORTB & ~(1<<LED_GREEN);    //LED OFF
            _delay_ms(DOT_DELAY);
        }
        _delay_ms(BREAK_DELAY);
        // O ---
        for (x = 1; x<=3; x++)
 10e:	39 f7       	brne	.-50     	; 0xde <main+0x64>
 110:	2f ef       	ldi	r18, 0xFF	; 255
 112:	3b e4       	ldi	r19, 0x4B	; 75
 114:	4d e1       	ldi	r20, 0x1D	; 29
 116:	21 50       	subi	r18, 0x01	; 1
 118:	30 40       	sbci	r19, 0x00	; 0
 11a:	40 40       	sbci	r20, 0x00	; 0
 11c:	e1 f7       	brne	.-8      	; 0x116 <main+0x9c>
 11e:	00 c0       	rjmp	.+0      	; 0x120 <main+0xa6>
 120:	00 00       	nop
 122:	23 e0       	ldi	r18, 0x03	; 3
 124:	30 e0       	ldi	r19, 0x00	; 0
        }
        _delay_ms(BREAK_DELAY);
        // S ...
        for (x = 1; x<=3; x++)
        {
            PORTB = PORTB ^ (1<<LED_GREEN);     //LED ON
 126:	85 b1       	in	r24, 0x05	; 5
 128:	89 27       	eor	r24, r25
 12a:	85 b9       	out	0x05, r24	; 5
 12c:	5f ef       	ldi	r21, 0xFF	; 255
 12e:	83 ec       	ldi	r24, 0xC3	; 195
 130:	49 e0       	ldi	r20, 0x09	; 9
 132:	51 50       	subi	r21, 0x01	; 1
 134:	80 40       	sbci	r24, 0x00	; 0
 136:	40 40       	sbci	r20, 0x00	; 0
 138:	e1 f7       	brne	.-8      	; 0x132 <main+0xb8>
 13a:	00 c0       	rjmp	.+0      	; 0x13c <main+0xc2>
 13c:	00 00       	nop
            _delay_ms(DOT_DELAY);
            PORTB = PORTB & ~(1<<LED_GREEN);    //LED OFF
 13e:	2d 98       	cbi	0x05, 5	; 5
 140:	5f ef       	ldi	r21, 0xFF	; 255
 142:	83 ec       	ldi	r24, 0xC3	; 195
 144:	49 e0       	ldi	r20, 0x09	; 9
 146:	51 50       	subi	r21, 0x01	; 1
 148:	80 40       	sbci	r24, 0x00	; 0
 14a:	40 40       	sbci	r20, 0x00	; 0
 14c:	e1 f7       	brne	.-8      	; 0x146 <main+0xcc>
 14e:	00 c0       	rjmp	.+0      	; 0x150 <main+0xd6>
 150:	00 00       	nop
 152:	21 50       	subi	r18, 0x01	; 1
 154:	31 09       	sbc	r19, r1
            PORTB = PORTB & ~(1<<LED_GREEN);    //LED OFF
            _delay_ms(DOT_DELAY);
        }
        _delay_ms(BREAK_DELAY);
        // S ...
        for (x = 1; x<=3; x++)
 156:	39 f7       	brne	.-50     	; 0x126 <main+0xac>
 158:	93 cf       	rjmp	.-218    	; 0x80 <main+0x6>

0000015a <_exit>:
 15a:	f8 94       	cli

0000015c <__stop_program>:
 15c:	ff cf       	rjmp	.-2      	; 0x15c <__stop_program>
